// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rentistry.web;

import com.rentistry.domain.Account;
import com.rentistry.domain.Authority;
import com.rentistry.domain.City;
import com.rentistry.domain.Item;
import com.rentistry.domain.ItemTag;
import com.rentistry.domain.Region;
import com.rentistry.domain.RentUser;
import java.lang.Long;
import java.lang.String;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Account, String> ApplicationConversionServiceFactoryBean.getAccountToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rentistry.domain.Account, java.lang.String>() {
            public String convert(Account account) {
                return new StringBuilder().append(account.getAvatarUrl()).append(" ").append(account.getAboutMe()).append(" ").append(account.getAvatarKey()).append(" ").append(account.getAvatarFileName()).toString();
            }
        };
    }
    
    public Converter<Long, Account> ApplicationConversionServiceFactoryBean.getIdToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.rentistry.domain.Account>() {
            public com.rentistry.domain.Account convert(java.lang.Long id) {
                return Account.findAccount(id);
            }
        };
    }
    
    public Converter<String, Account> ApplicationConversionServiceFactoryBean.getStringToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rentistry.domain.Account>() {
            public com.rentistry.domain.Account convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Account.class);
            }
        };
    }
    
    public Converter<Authority, String> ApplicationConversionServiceFactoryBean.getAuthorityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rentistry.domain.Authority, java.lang.String>() {
            public String convert(Authority authority) {
                return new StringBuilder().append(authority.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Authority> ApplicationConversionServiceFactoryBean.getIdToAuthorityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.rentistry.domain.Authority>() {
            public com.rentistry.domain.Authority convert(java.lang.Long id) {
                return Authority.findAuthority(id);
            }
        };
    }
    
    public Converter<String, Authority> ApplicationConversionServiceFactoryBean.getStringToAuthorityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rentistry.domain.Authority>() {
            public com.rentistry.domain.Authority convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Authority.class);
            }
        };
    }
    
    public Converter<City, String> ApplicationConversionServiceFactoryBean.getCityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rentistry.domain.City, java.lang.String>() {
            public String convert(City city) {
                return new StringBuilder().append(city.getName()).append(" ").append(city.getStateCode()).append(" ").append(city.getZip()).append(" ").append(city.getLatitude()).toString();
            }
        };
    }
    
    public Converter<Long, City> ApplicationConversionServiceFactoryBean.getIdToCityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.rentistry.domain.City>() {
            public com.rentistry.domain.City convert(java.lang.Long id) {
                return City.findCity(id);
            }
        };
    }
    
    public Converter<String, City> ApplicationConversionServiceFactoryBean.getStringToCityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rentistry.domain.City>() {
            public com.rentistry.domain.City convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), City.class);
            }
        };
    }
    
    public Converter<Item, String> ApplicationConversionServiceFactoryBean.getItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rentistry.domain.Item, java.lang.String>() {
            public String convert(Item item) {
                return new StringBuilder().append(item.getStartDate()).append(" ").append(item.getEndDate()).append(" ").append(item.getDescription()).append(" ").append(item.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Item> ApplicationConversionServiceFactoryBean.getIdToItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.rentistry.domain.Item>() {
            public com.rentistry.domain.Item convert(java.lang.Long id) {
                return Item.findItem(id);
            }
        };
    }
    
    public Converter<String, Item> ApplicationConversionServiceFactoryBean.getStringToItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rentistry.domain.Item>() {
            public com.rentistry.domain.Item convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Item.class);
            }
        };
    }
    
    public Converter<ItemTag, String> ApplicationConversionServiceFactoryBean.getItemTagToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rentistry.domain.ItemTag, java.lang.String>() {
            public String convert(ItemTag itemTag) {
                return new StringBuilder().append(itemTag.getText()).toString();
            }
        };
    }
    
    public Converter<Long, ItemTag> ApplicationConversionServiceFactoryBean.getIdToItemTagConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.rentistry.domain.ItemTag>() {
            public com.rentistry.domain.ItemTag convert(java.lang.Long id) {
                return ItemTag.findItemTag(id);
            }
        };
    }
    
    public Converter<String, ItemTag> ApplicationConversionServiceFactoryBean.getStringToItemTagConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rentistry.domain.ItemTag>() {
            public com.rentistry.domain.ItemTag convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ItemTag.class);
            }
        };
    }
    
    public Converter<Region, String> ApplicationConversionServiceFactoryBean.getRegionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rentistry.domain.Region, java.lang.String>() {
            public String convert(Region region) {
                return new StringBuilder().append(region.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Region> ApplicationConversionServiceFactoryBean.getIdToRegionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.rentistry.domain.Region>() {
            public com.rentistry.domain.Region convert(java.lang.Long id) {
                return Region.findRegion(id);
            }
        };
    }
    
    public Converter<String, Region> ApplicationConversionServiceFactoryBean.getStringToRegionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rentistry.domain.Region>() {
            public com.rentistry.domain.Region convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Region.class);
            }
        };
    }
    
    public Converter<RentUser, String> ApplicationConversionServiceFactoryBean.getRentUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.rentistry.domain.RentUser, java.lang.String>() {
            public String convert(RentUser rentUser) {
                return new StringBuilder().append(rentUser.getUserEmail()).append(" ").append(rentUser.getFirstName()).append(" ").append(rentUser.getLastName()).append(" ").append(rentUser.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, RentUser> ApplicationConversionServiceFactoryBean.getIdToRentUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.rentistry.domain.RentUser>() {
            public com.rentistry.domain.RentUser convert(java.lang.Long id) {
                return RentUser.findRentUser(id);
            }
        };
    }
    
    public Converter<String, RentUser> ApplicationConversionServiceFactoryBean.getStringToRentUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.rentistry.domain.RentUser>() {
            public com.rentistry.domain.RentUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RentUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAccountToStringConverter());
        registry.addConverter(getIdToAccountConverter());
        registry.addConverter(getStringToAccountConverter());
        registry.addConverter(getAuthorityToStringConverter());
        registry.addConverter(getIdToAuthorityConverter());
        registry.addConverter(getStringToAuthorityConverter());
        registry.addConverter(getCityToStringConverter());
        registry.addConverter(getIdToCityConverter());
        registry.addConverter(getStringToCityConverter());
        registry.addConverter(getItemToStringConverter());
        registry.addConverter(getIdToItemConverter());
        registry.addConverter(getStringToItemConverter());
        registry.addConverter(getItemTagToStringConverter());
        registry.addConverter(getIdToItemTagConverter());
        registry.addConverter(getStringToItemTagConverter());
        registry.addConverter(getRegionToStringConverter());
        registry.addConverter(getIdToRegionConverter());
        registry.addConverter(getStringToRegionConverter());
        registry.addConverter(getRentUserToStringConverter());
        registry.addConverter(getIdToRentUserConverter());
        registry.addConverter(getStringToRentUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
